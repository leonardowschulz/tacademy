package TrabalhoAvaliativo;

import java.util.ArrayList;

import javax.swing.JOptionPane;

public class Cadastro {
	
	ArrayList<Marca> marcas = new ArrayList<>();
	
	ArrayList<Produto> produtos = new ArrayList<>();
	Produto novoProduto = new Produto();
	
	
	public void cadastrarProduto(String nome, String descricao, double valor, int quantidade, Marca marca) {
		novoProduto.setNome(nome);
		novoProduto.setDescricao(descricao);
		novoProduto.setValor(valor);
		novoProduto.setQuantidade(quantidade);
		novoProduto.setMarca(marca);
		System.out.println("Produto " + nome + " cadastrado com sucesso.");
	}
	
	public void cadastrarNovaMarca(String marca) {
		Marca novaMarca = new Marca();
		if (!marcaExiste(marca)) {
			novaMarca.setNomeMarca(marca);
			marcas.add(novaMarca);
			System.out.println("Marca cadastrada com sucesso");
		} else {
			System.out.println("Marca já existente");
		}
	}
	
	public boolean marcaExiste(String marca) {
		Marca novaMarca = new Marca(marca.toUpperCase());
		for (int i = 0; i < marcas.size(); i++) {
			if (marcas.get(i).equals(novaMarca)) {
				return true;
			}
		}
		return false;
	}
	
	public void listarMarcas() {
		if (!marcas.isEmpty()) {
			System.out.println(" --------- Lista de Marcas: ---------");
			for (int i = 0; i < marcas.size(); i++) {
			System.out.println((i + 1) + " Nome: " + marcas.get(i).getNomeMarca());
			}
			System.out.println(" -------- Total de Marcas: " + marcas.size() + " --------");
		} else {
			System.out.println("Sem marcas cadastradas");
		}
	}
	public void alterarCadastroMarca() {
		listarMarcas();
		Integer numCadastro = Integer.parseInt(JOptionPane.showInputDialog("Digite o número do cadastro a ser alterado:"));
		if (isCadastroNumMarcaValid(numCadastro)) {
			Marca novaMarca = new Marca();
			novaMarca.setNomeMarca(JOptionPane.showInputDialog("Digite o novo nome da marca: "));
			marcas.set(numCadastro-1, novaMarca);
			System.out.println("Marca alterada com sucesso");
		} else {
			
		}
	}
	public boolean isCadastroNumMarcaValid(int x) {
		if (marcas.size() <= x) {
		return true;
		}
		else {
			return false;
		}
	}
	

}
